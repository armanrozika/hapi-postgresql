{"version":3,"sources":["reducer/index.js","components/Dashboard.js","actions/action.js","components/Page.js","components/Addpost.js","App.js","serviceWorker.js","index.js"],"names":["initState","data","addpost","reducer","state","arguments","length","undefined","action","type","Object","objectSpread","payload","Dashboard","isHidden","deletePost","_callee","id","dat","regenerator_default","a","wrap","_context","prev","next","window","confirm","fetch","method","body","JSON","stringify","headers","Content-Type","then","res","json","response","console","log","catch","error","location","reload","stop","hide","_this","setState","this","props","fetchActions","_this2","notif","fromDashboard","states","map","item","index","react_default","createElement","className","key","src","picurl","alt","name","slice","description","price","react_router_dom","to","onClick","success","concat","Component","connect","dispatch","Page","match","params","img","redirect","hideBody","changeState","e","defineProperty","target","value","getImg","setpic","files","_callee2","formData","options","_context2","FormData","append","postAdded","renderRedirect","react_router","onChange","placeholder","Addpost","adding","goFetch","sent","App","postsatus","submitted","role","aria-label","href","width","height","exact","path","component","withRouter","Boolean","hostname","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f9956a51.chunk.js","sourcesContent":["\nconst initState = {\n\tdata: [],\n\taddpost: ''\n}\n\nconst reducer = (state = initState, action) => {\n\tif(action.type === 'FETCH_DATA'){\n\t\treturn {\n\t\t\t...state,\n\t\t\tdata: action.payload\n\t\t}\n\t}\n\n\tif(action.type === 'SHOW_SUCCESS'){\n\t\treturn {\n\t\t\t...state,\n\t\t\taddpost: action.payload\n\t\t}\n\t}\n\t\n\treturn state;\n}\n\nexport default reducer;","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux';\r\n\r\nimport {fetchActions} from '../actions/action.js'\r\n\r\nclass Dashboard extends Component {\r\n\r\n  state = {\r\n    isHidden: 'notHidden'\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.fetchActions()\r\n  }\r\n  \r\n  //delete post\r\n  deletePost = async (id)=>{\r\n    const confirm = window.confirm(\"Delete this post?\");\r\n    if(confirm==true){\r\n       const dat = {\r\n        id: id\r\n      }\r\n      await fetch('http://localhost:8000/delete', {\r\n          method: 'DELETE',\r\n          body: JSON.stringify(dat),\r\n          headers: {\r\n              'Content-Type': 'application/json'\r\n          }\r\n      })\r\n      .then(res => res.json())\r\n      .then(response => console.log('Success:', JSON.stringify(response)))\r\n      .catch(error => console.error('Error:', error));\r\n\r\n      window.location.reload()\r\n    }\r\n   \r\n  }\r\n\r\n  hide = ()=> {\r\n    this.setState({\r\n      isHidden: 'isHidden'\r\n    })\r\n  }\r\n\r\n  render() {\r\n   console.log(this.props.notif)\r\n    const fromDashboard = this.props.states.map((item, index)=>{\r\n        return (<div className=\"column\" key={item.id}>\r\n            <div className=\"box\">\r\n                <img src={item.picurl} alt=\"\"/>\r\n                <div className=\"block\">\r\n                    <p className=\"title is-4 border-bot\">{item.name.length > 12 ? item.name.slice(0,12) + \"...\" : item.name}</p>\r\n                    <p className=\"subtitle is-6 over-hidden\">{item.description.length > 100 ? item.description.slice(0,100) + \"...\" : item.description}</p>\r\n                </div>\r\n                <div className=\"block\">\r\n                    <button className=\"button is-success is-fullwidth is-active no-pointer\"> Rp. {item.price}</button>\r\n                </div>\r\n                <div className=\"tags\">\r\n                    <Link to={\"/post/\" + index} className=\"tag is-info\">EDIT</Link>\r\n                    <span onClick={()=>this.deletePost(item.id)} className=\"tag is-danger\">DELETE</span>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n    });\r\n\r\n    const success = this.props.notif === 'added' ? (\r\n      <div className={`notification is-success ${this.state.isHidden}`}>\r\n          <button onClick={this.hide} className=\"delete\"></button>\r\n          <p className=\"title is-5\">Success !</p>\r\n        </div>\r\n    ) : (\r\n        <div></div>\r\n      );\r\n\r\n    return (\r\n      <div className=\"section\">\r\n        <div className=\"container container-top\">\r\n            {success}\r\n            <div className=\"columns grid-four\">\r\n                {fromDashboard}\r\n            </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    states: state.data,\r\n    notif: state.addpost\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchActions})(Dashboard);\r\n","\nexport function fetchActions(){\n\treturn function(dispatch){\n\t\tfetch('http://localhost:8000')\n\t\t.then(res => res.json())\n\t\t.then(data => dispatch({\n\t\t\ttype: 'FETCH_DATA',\n\t\t\tpayload: data\n\t\t}))\n\t}\n}\n\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {fetchActions} from '../actions/action.js'\r\n\r\nclass Page extends Component {\r\n    state = {\r\n        name: this.props.states[this.props.match.params.id].name,\r\n        price:  this.props.states[this.props.match.params.id].price,\r\n        description: this.props.states[this.props.match.params.id].description,\r\n        picurl: this.props.states[this.props.match.params.id].picurl,\r\n        img: '',\r\n        index: this.props.match.params.id,\r\n        redirect: false,\r\n        isHidden: 'isHidden',\r\n        hideBody: 'notHidden'\r\n    }\r\n\r\n    componentDidMount(){\r\n        //this.props.fetchActions()\r\n        console.log(this.props.states)\r\n         console.log(this.state.name.length)\r\n    }\r\n\r\n    changeState = (e)=>{\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n        console.log(this.state.name)\r\n    }\r\n\r\n    getImg = async (e)=>{\r\n        const setpic = \"http://localhost:8000/upload/\" + e.target.files[0].name\r\n          await this.setState({\r\n              img: e.target.files[0],\r\n              picurl: setpic\r\n          })\r\n\r\n          //console.log(this.state.picurl)\r\n    }\r\n\r\n    onClick = async (e)=>{\r\n        this.setState({\r\n            isHidden: 'notHidden',\r\n            hideBody: 'isHidden'\r\n        })\r\n        const formData = new FormData();\r\n        formData.append('file', this.state.img);\r\n        const options = {\r\n            method: 'POST',\r\n            body: formData,\r\n        };\r\n        await fetch('http://localhost:8000/upload', options).catch(error => console.error('Error:', error));\r\n        \r\n\r\n        const data = {\r\n             id: this.props.states[this.props.match.params.id].id,\r\n             name: this.state.name,\r\n             price: this.state.price,\r\n             description: this.state.description,\r\n             picurl: this.state.picurl\r\n        }\r\n\r\n        await fetch('http://localhost:8000/update', {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(response => console.log('Success:', JSON.stringify(response)))\r\n        .catch(error => console.error('Error:', error));\r\n        this.props.postAdded();\r\n        this.setState({\r\n            redirect: true,\r\n            isHidden: 'isHidden',\r\n            hideBody: 'notHidden'\r\n        })\r\n    }\r\n\r\n    renderRedirect = () => {\r\n        if (this.state.redirect) {\r\n            return <Redirect to='/'/>\r\n        }\r\n    }\r\n\r\n\r\n  render() {\r\n  \tconst index = this.props.match.params.id\r\n    return (\r\n      <div className=\"addpost\">\r\n        <p className={this.state.isHidden}>editing post...</p>\r\n        <h1 className={this.state.hideBody}>Edit</h1>\r\n        <div className={`field ${this.state.hideBody}`}>\r\n            <label className=\"label\">Name</label>\r\n            <div className=\"control\">\r\n                <input onChange={this.changeState} name=\"name\" className=\"input\" type=\"text\" placeholder=\"Text input\" value={this.state.name}/>\r\n            </div>\r\n        </div>\r\n        <div className={`field ${this.state.hideBody}`}>\r\n            <label className=\"label\">Price</label>\r\n            <div className=\"control\">\r\n                <input onChange={this.changeState} name=\"price\" className=\"input\" type=\"number\" placeholder=\"Text input\" value={this.state.price}/>\r\n            </div>\r\n        </div>\r\n        <div className={`field ${this.state.hideBody}`}>\r\n            <label className=\"label\">Description</label>\r\n            <div className=\"control\">\r\n                <textarea onChange={this.changeState} name=\"description\" className=\"textarea\" placeholder=\"Textarea\" value={this.state.description}></textarea>\r\n            </div>\r\n        </div>\r\n        <div className={`field ${this.state.hideBody}`}>\r\n            <label className=\"label\">Image</label>\r\n            <div className=\"control\">\r\n               <input type=\"file\" onChange={this.getImg}/>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        {this.renderRedirect()}\r\n        <button onClick={this.onClick} className=\"button is-primary\">SUBMIT</button>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    states: state.data,\r\n    notif: state.addpost\r\n  }\r\n}\r\n\r\nconst mapDisPatchToProps = (dispatch) => {\r\n  return {\r\n    postAdded: () => dispatch({type: 'SHOW_SUCCESS', payload: 'added'})\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDisPatchToProps)(Page);","import React, { Component } from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nclass Addpost extends Component {\r\n  state = {\r\n      data: {\r\n          img: '',\r\n          name: '',\r\n          price: '',\r\n          description: '',\r\n          picurl: '',\r\n          redirect: false,\r\n      },\r\n      isHidden: \"notHidden\",\r\n      adding: \"isHidden\"\r\n  }\r\n\r\n  componentDidMount(){\r\n    console.log(this.props)\r\n  }\r\n\r\n  onClick = async ()=>{\r\n      //console.log('fetch');\r\n        this.setState({\r\n            isHidden: \"isHidden\",\r\n            adding: \"notHidden\"\r\n        })\r\n\r\n      const formData = new FormData();\r\n      formData.append('file', this.state.img);\r\n\r\n      const options = {\r\n        method: 'POST',\r\n        body: formData,\r\n      };\r\n\r\n     await fetch('http://localhost:8000/upload', options).catch(error => console.error('Error:', error));\r\n\r\n     const data = {\r\n         name: this.state.name,\r\n         price: this.state.price,\r\n         description: this.state.description,\r\n         picurl: this.state.picurl\r\n     }\r\n\r\n     const goFetch = await fetch('http://localhost:8000/post', {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n    const res = await goFetch.json();\r\n    const bck = await console.log(res)\r\n    this.props.postAdded();\r\n      this.setState({\r\n        redirect: true,\r\n        isHidden: 'notHidden',\r\n        adding: 'isHidden'\r\n      })\r\n  }\r\n\r\n  getImg = async (e)=>{\r\n      //console.log(e.target.files[0])\r\n      const setpic = \"http://localhost:8000/upload/\" + e.target.files[0].name\r\n      await this.setState({\r\n          img: e.target.files[0],\r\n          picurl: setpic\r\n      })\r\n\r\n      //const data = this.state;\r\n  }\r\n\r\n  changeState = (e)=>{\r\n    this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n      return <Redirect to='/'/>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={`addpost ${this.state.isHidden}`}>\r\n        <p className={this.state.adding}>adding post...</p>\r\n        <div className=\"field\">\r\n            <label className=\"label\">Name</label>\r\n            <div className=\"control\">\r\n                <input onChange={this.changeState} name=\"name\" className=\"input\" type=\"text\" placeholder=\"Text input\" />\r\n            </div>\r\n        </div>\r\n        <div className=\"field\">\r\n            <label className=\"label\">Price</label>\r\n            <div className=\"control\">\r\n                <input onChange={this.changeState} name=\"price\" className=\"input\" type=\"number\" placeholder=\"Text input\" />\r\n            </div>\r\n        </div>\r\n        <div className=\"field\">\r\n            <label className=\"label\">Description</label>\r\n            <div className=\"control\">\r\n                <textarea onChange={this.changeState} name=\"description\" className=\"textarea\" placeholder=\"Textarea\"></textarea>\r\n            </div>\r\n        </div>\r\n        <div className=\"field\">\r\n            <label className=\"label\">Image</label>\r\n            <div className=\"control\">\r\n               <input type=\"file\" onChange={this.getImg}/>\r\n            </div>\r\n        </div>\r\n\r\n\r\n       {this.renderRedirect()}\r\n        <button onClick={this.onClick} className=\"button is-primary\">SUBMIT</button>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapDisPatchToProps = (dispatch) => {\r\n  return {\r\n    postAdded: () => dispatch({type: 'SHOW_SUCCESS', payload: 'added'})\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDisPatchToProps)(Addpost);\r\n","import React, { Component } from 'react';\nimport {BrowserRouter, Route, Link, withRouter} from 'react-router-dom';\n\nimport Dashboard from './components/Dashboard'\nimport Page from './components/Page'\nimport Addpost from './components/Addpost'\n\nclass App extends Component {\n  state = {\n    data: [],\n    postsatus: true,\n    submitted: false\n  }\n\n  componentDidMount(){\n    \n  }\n\n  \n   \n  render() {\n    return (\n      //<BrowserRouter>\n      <div>\n        <div className=\"hero is-primary is-fixed\">\n          <div className=\"container\">\n            <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n\n              <div className=\"navbar-brand\">\n                <a className=\"navbar-item\" href=\"/\">\n                  <img src=\"https://pngimage.net/wp-content/uploads/2018/06/sport-logo-png-3.png\" width=\"112\" height=\"28\" />\n                </a>\n              </div>\n\n              <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n                <div className=\"navbar-start\">\n                  <Link to=\"/\" className=\"navbar-item \">\n                    Dashboard\n                  </Link>\n                  <Link to=\"/addpost\" className=\"navbar-item \">\n                    <button className=\"button is-link is-inverted\">Add Post +</button>\n                  </Link>\n                </div>\n              </div>\n\n            </nav>\n          </div>\n        </div>\n        <Route exact path=\"/\" component={Dashboard}></Route>\n        <Route path=\"/post/:id\" component={Page}></Route>\n        <Route path=\"/addpost\" component={Addpost}></Route>\n        </div>\n      //</BrowserRouter>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducer';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nReactDOM.render(<Provider store={store}><BrowserRouter><App /></BrowserRouter></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}